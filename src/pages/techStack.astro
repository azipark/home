---
import Main from '../layouts/Main.astro';
import Cards from '../components/Cards.astro';

const techCardsData = [
  { src: '/images/html5.svg', alt: 'HTML5' },
  { src: '/images/css3.svg', alt: 'CSS3' },
  { src: '/images/sass.svg', alt: 'SASS' },
  { src: '/images/tailwind.svg', alt: 'TailwindCSS' },
  { src: '/images/bootstrap.svg', alt: 'Bootstrap' },
  { src: '/images/jquery.svg', alt: 'jQuery' },
  { src: '/images/javascript.svg', alt: 'Javascript' },
  { src: '/images/react.svg', alt: 'React' },
  { src: '/images/vue.svg', alt: 'VueJS' },
  { src: '/images/figma.svg', alt: 'Figma' },
  { src: '/images/sketch.svg', alt: 'Sketch' },
  { src: '/images/xd.svg', alt: 'AdobeXD' },
  { src: '/images/zeplin.svg', alt: 'Zeplin' }
];
---

<Main title="Tech Stack">
  <div transition:name="cards">
    <Cards
      cards={[
        {
          title: 'Tech',
          gradientFrom: '#fde68a',
          gradientTo: '#fca5a5',
          to: '/techStack',
        },
        {
          title: 'Projects',
          gradientFrom: '#6ee7b7',
          gradientTo: '#9333ea',
          to: '/projects',
        },
      ]}
    />
  </div>
  <div class="relative mt-10 p-4 animated-text">
    <h2 class="text-2xl">Here are the technologies<br/>I specialize in!</h2>
  </div>
  <div class="grid-container justify-items-center relative grid grid-cols-4 grid-rows-4 p-6 sm:p-4 gap-4 sm:gap-2 sm:h-auto border-2 border-gray-200 dark:border-gray-700 mt-6 mb-12 rounded-3xl transition-transform duration-200 ease-in-out hover:scale-95">
    {
      techCardsData.map(techCard => (
        <div class="flex items-center justify-center relative unselectable tech-card rounded-lg">
          <img
            src={techCard.src}
            alt={techCard.alt}
            class="w-20 h-20"
            loading="eager"
          />
        </div>
      ))
    }
  </div>
</Main>
<style>
  .grid-container {
    width: 100%;
    height: 480px;
  }

  .tech-card {
    opacity: 0;
    transform: translateY(20px);
  }
</style>
<script>
  import { gsap } from 'gsap';
  import { Draggable } from 'gsap/Draggable';
  gsap.registerPlugin(Draggable);

  document.addEventListener('astro:page-load', () => {
    gsap.to('.animated-text', {
      opacity: 1,
      y: 0,
      duration: 1,
      ease: 'power2.out',
    });

    gsap.to('.tech-card', {
      opacity: 1,
      y: 0,
      duration: 1,
      stagger: 0.1,
      ease: 'power2.out',
      onComplete: () => {
        Draggable.create('.draggable', {
          type: 'x,y',
          bounds: '.grid-container',
          edgeResistance: 0.65,
          inertia: true,
        });
      },
    });
    setupIframeHover('resumeLink', 'resumeIframeContainer');
    setupIframeHover('blogPostLink', 'blogPostIframeContainer');

    function setupIframeHover(linkId: string, containerId: string) {
      const link = document.getElementById(linkId) as HTMLAnchorElement;
      const container = document.getElementById(containerId) as HTMLDivElement;

      link.addEventListener('mouseenter', (event: MouseEvent) => {
        container.classList.remove('hidden');
        positionIframe(event, container);
      });

      link.addEventListener('mousemove', (event: MouseEvent) => {
        positionIframe(event, container);
      });

      link.addEventListener('mouseleave', () => {
        container.classList.add('hidden');
      });
    }

    function positionIframe(event: MouseEvent, container: HTMLDivElement) {
      const offset = 10;
      const x = event.clientX + offset;
      const y = event.clientY + offset;

      container.style.left = `${x}px`;
      container.style.top = `${y}px`;
    }
  });
</script>